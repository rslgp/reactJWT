{"version":3,"sources":["components/func/GlobalVariables.js","components/func/JWT_AUTH.js","components/func/firebase_setup.js","components/func/queryTags.js","components/NavBar.js","components/MultiTag.js","components/Login.js","components/Header.js","App.js","components/firebasePages/Page.js","components/firebasePages/PublicPage.js","components/firebasePages/UsersByTag.js","components/firebasePages/AllTags.js","index.js"],"names":["GlobalVariables","malFormedURL","includes","jwt","require","credentials","process","cookieName","JWT_AUTH","getSessionData","token","Cookies","get","Error","client","verify","exp","Date","now","this","removeSessionData","e","console","log","message","window","location","href","homepage","loginPage","saveSessionData","clientData","data","email","Math","floor","sign","set","expires","remove","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","getFirestore","getUsersWithTags","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","tagsToFilter","usersCollection","queryForUsers","querySnapshot","usersWithTags","wrap","_context","prev","next","collection","query","where","getDocs","sent","forEach","doc","userData","every","tag","tags","push","abrupt","t0","error","stop","_x","apply","arguments","signout","NavBar","_jsx","AppBar","position","style","backgroundColor","themeColor","children","Toolbar","_jsxs","Grid","container","alignItems","justifyContent","item","Button","onClick","profilePage","HomeIcon","multiTagPage","SearchIcon","color","LogoutIcon","MultiTag","props","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","_useState3","_useState4","values","setValues","handleSplitValues","splitValues","split","map","value","trim","t1","hideNavBar","Box","sx","display","flexDirection","TextField","type","placeholder","onChange","target","width","marginBottom","variant","marginTop","List","index","ListItem","Link","className","rel","concat","publicProfilePage","public_id","name","publicContact","fixURL","_Fragment","portfolio","curriculo","Login","GoogleLogin","clientId","buttonText","onSuccess","googleResponse","profileObj","_googleResponse$profi","profileData","imageUrl","JSON","stringify","onFailure","cookiePolicy","Divider","margin","padding","mx","Header","App","emailToHash","hash","i","length","charCodeAt","abs","removedTags","Page","setUserData","setTags","_useState5","_useState6","newTag","setNewTag","_useState7","_useState8","newPublicContact","setNewPublicContact","_useState9","_useState10","newPortfolio","setNewPortfolio","_useState11","_useState12","newCurriculo","setNewCurriculo","fillProfilePage","deleteProfile","id","btoa","deleteDoc","toString","localStorage","removeItem","alert","saveProfile","_ref2","_callee3","userDocRef","updatedTags","batch","storedData","_context3","updateDoc","writeBatch","element","tagDocRef","toLowerCase","_defineProperty","merge","_ref3","_callee2","_context2","update","deleteField","commit","parse","getItem","setItem","useEffect","_getData","_callee4","userDoc","_data","publicDocRef","_context4","getDoc","exists","profilePictureUrl","setDoc","getData","handleAddTag","tag_formatted","_toConsumableArray","updatedUserData","_objectSpread","Avatar","alt","src","height","Typography","component","flexWrap","Chip","label","onDelete","tagToRemove","filter","handleRemoveTag","onKeyUp","key","borderRadius","CircularProgress","PublicPage","profile_id","useParams","publicUserDocRef","publicUserDoc","_userData","otherProps","_objectWithoutProperties","_excluded","gap","UsersByTag","users","setUsers","fetchData","tagDoc","Object","keys","user","AllTags","tagsCollection","tagData","marginRight","tagPage","router","createHashRouter","path","allTagPage","ReactDOM","document","getElementById","render","RouterProvider"],"mappings":"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","file":"static/js/main.1dc4ecfa.chunk.js","sourcesContent":["const GlobalVariables = {}\r\nGlobalVariables.homepage=\"http://rslgp.github.io/reactJWT/#\";\r\nGlobalVariables.loginPage=\"auth/login\";\r\nGlobalVariables.profilePage=\"page\";\r\nGlobalVariables.publicProfilePage=\"profile/:profile_id\";\r\nGlobalVariables.tagPage=\"tags/:tag\";\r\nGlobalVariables.allTagPage=\"tags\";\r\nGlobalVariables.multiTagPage=\"querytags\";\r\n\r\nGlobalVariables.fixURL = (malFormedURL) => {\r\n    if(!malFormedURL) return;\r\n\r\n    if(malFormedURL.includes(\"http\")){\r\n        return malFormedURL;\r\n    }\r\n    if(malFormedURL.includes(\"9\")){\r\n        return \"https://wa.me/55\"+malFormedURL;\r\n    }\r\n    return \"https://\"+malFormedURL;\r\n}\r\n\r\nGlobalVariables.themeColor = \"#f0f2f5\";\r\n\r\nexport default GlobalVariables;","import Cookies from \"js-cookie\";\r\nimport GlobalVariables from \"./GlobalVariables\";\r\nvar jwt = require(\"jsonwebtoken\");\r\n\r\nvar credentials = {}\r\ncredentials.jwt = process.env.REACT_APP_JWT;\r\n\r\nconst cookieName = \"access_token\";\r\nconst expirationHours=1;\r\n\r\nconst JWT_AUTH = {\r\n  getSessionData: function () {\r\n    try {\r\n        var token = Cookies.get(cookieName);\r\n        if (!token) {\r\n            // Token is not present\r\n            throw new Error('No Auth Cookie');\r\n        }\r\n        var client = jwt.verify(token, credentials.jwt);\r\n\r\n        // Check if token has expired\r\n        if (client.exp && client.exp < Date.now() / 1000) {\r\n            // Token has expired\r\n            this.removeSessionData(); // Remove the expired token            \r\n            throw new Error('Token Expired');\r\n        }\r\n        return client;\r\n    } catch (e) {\r\n        console.log(e.message);\r\n        window.location.href=GlobalVariables.homepage +\"/\"+ GlobalVariables.loginPage;\r\n        return null;\r\n    }\r\n  },\r\n  saveSessionData: function (clientData) {\r\n    const expInSeconds = (expirationHours+1) * 60 * 60;\r\n    const data = {\r\n      email: clientData.email,\r\n      exp: Math.floor(Date.now() / 1000) + expInSeconds,\r\n    };\r\n    var token = jwt.sign(data, credentials.jwt);\r\n    Cookies.set(cookieName, token, { expires: expirationHours / 24 }); // Set the cookie expiration in days\r\n  },\r\n  removeSessionData: function () {\r\n    Cookies.remove(cookieName);\r\n  },\r\n};\r\n\r\nexport default JWT_AUTH;\r\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE,\r\n  authDomain: \"myapp-d87de.firebaseapp.com\",\r\n  projectId: \"myapp-d87de\",\r\n  storageBucket: \"myapp-d87de.appspot.com\",\r\n  messagingSenderId: \"101658274836\",\r\n  appId: \"1:101658274836:web:364eb204ab277197d30b01\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nexport default app;","import { getFirestore, collection, query, where, getDocs } from \"firebase/firestore\";\r\nimport app from \"../func/firebase_setup\"; // Import your Firebase configuration file\r\n\r\nconst firestore = getFirestore(app);\r\n\r\nconst getUsersWithTags = async (tagsToFilter) => {\r\n  try {\r\n    // Reference to the \"users\" collection\r\n    const usersCollection = collection(firestore, \"users\");\r\n\r\n    // Define the tags you want to filter by\r\n    //const tagsToFilter = [\"react\", \"nodejs\"];\r\n\r\n    // Build a query to find users with both \"react\" and \"nodejs\" tags\r\n    const queryForUsers = query(\r\n      usersCollection,\r\n      where(\"tags\", \"array-contains-any\", tagsToFilter)\r\n    );\r\n\r\n    // Execute the query and get the result\r\n    const querySnapshot = await getDocs(queryForUsers);\r\n\r\n    // Process the query results\r\n    const usersWithTags = [];\r\n    querySnapshot.forEach((doc) => {\r\n      // Get user data\r\n      const userData = doc.data();\r\n\r\n      // Check if the user has both tags\r\n      if (\r\n        tagsToFilter.every((tag) => userData.tags.includes(tag))\r\n      ) {\r\n        usersWithTags.push(userData);\r\n      }\r\n    });\r\n\r\n    // usersWithTags now contains the list of users who have both \"react\" and \"nodejs\" tags\r\n    //console.log(\"Users with both tags:\", usersWithTags);\r\n    return usersWithTags;\r\n  } catch (error) {\r\n    console.error(\"Error fetching users:\", error);\r\n  }\r\n};\r\nexport default getUsersWithTags;","import { AppBar, Button, Grid, Toolbar } from \"@mui/material\";\r\nimport Cookies from \"js-cookie\";\r\nimport GlobalVariables from \"./func/GlobalVariables\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport LogoutIcon from \"@mui/icons-material/Logout\";\r\n\r\nconst signout = () => {\r\n  Cookies.remove(\"access_token\");\r\n  window.location.href =\r\n    GlobalVariables.homepage + \"/\" + GlobalVariables.loginPage;\r\n};\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <AppBar position=\"static\" style={{ backgroundColor: GlobalVariables.themeColor }}>\r\n      <Toolbar>\r\n        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Grid item>\r\n            <Button onClick={() => (window.location.href =\r\n              GlobalVariables.homepage + \"/\" + GlobalVariables.profilePage)}>\r\n              <HomeIcon />\r\n            </Button>\r\n            <Button onClick={() => (window.location.href =\r\n              GlobalVariables.homepage + \"/\" + GlobalVariables.multiTagPage)}>\r\n              <SearchIcon />\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button color=\"inherit\" onClick={signout} style={{ color: \"black\" }}>\r\n              <LogoutIcon /> Sign Out\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useState } from \"react\";\r\nimport getUsersWithTags from './func/queryTags';\r\nimport GlobalVariables from \"./func/GlobalVariables\";\r\n\r\nimport {Box, TextField, Button, List, ListItem, Link} from \"@mui/material\";\r\nimport \"../App.css\";\r\nimport NavBar from \"./NavBar\";\r\n\r\nconst MultiTag = (props) => {\r\n  const [inputValue, setInputValue] = useState(\"\"); // State for input value\r\n  const [values, setValues] = useState([]); // State to store split values\r\n\r\n  // Function to handle input value changes\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  // Function to split input value by comma and update the 'values' state\r\n  const handleSplitValues = async () => {\r\n    const splitValues = inputValue.split(\",\").map((value) => value.trim());\r\n    setValues(await getUsersWithTags(splitValues));\r\n  };\r\n\r\nreturn (\r\n  <div>\r\n    {props.hideNavBar ? null : <NavBar/>}\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <h2>Buscador de perfil multi Tag</h2>\r\n      <TextField\r\n        type=\"text\"\r\n        placeholder=\"Insira as tags separado por virgulas (sem espaço)\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        sx={{\r\n          width: \"100%\",\r\n          marginBottom: \"10px\",\r\n        }}\r\n      />\r\n      <Button onClick={handleSplitValues} variant=\"contained\">Buscar</Button>\r\n\r\n      <Box\r\n        sx={{\r\n          marginTop: \"10px\",\r\n        }}\r\n      >\r\n        <List>\r\n          {values.map((value, index) => (\r\n            <ListItem key={index}>\r\n              <Link\r\n                className=\"espacamento\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                href={`${GlobalVariables.homepage}/${GlobalVariables.publicProfilePage.split(\":\")[0]}${value.public_id}`}\r\n              >\r\n                {value.public_id}\r\n              </Link>\r\n              {value.name}\r\n              \r\n              {value.publicContact ? \r\n              <Link className=\"espacamento\" href={`${GlobalVariables.fixURL(value.publicContact)}`} target=\"_blank\" rel=\"noreferrer\">\r\n                {value.publicContact}\r\n              </Link> : <></>}\r\n\r\n              {value.portfolio ? \r\n              <Link className=\"espacamento\" href={`${GlobalVariables.fixURL(value.portfolio)}`} target=\"_blank\" rel=\"noreferrer\">\r\n                portfolio\r\n              </Link> : <></>}\r\n\r\n              {value.curriculo ? \r\n              <Link className=\"espacamento\" href={`${GlobalVariables.fixURL(value.curriculo)}`} target=\"_blank\" rel=\"noreferrer\">\r\n                curriculo\r\n              </Link> : <></>}\r\n\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Box>\r\n    </Box>\r\n  </div>\r\n);\r\n};\r\n\r\nexport default MultiTag;\r\n","import GoogleLogin from  \"@stack-pulse/next-google-login\"\r\n\r\n//import saveToGoogleSheets from './func/saveToGoogleSheets'\r\n\r\nimport JWT_AUTH from \"./func/JWT_AUTH\"\r\nimport GlobalVariables from \"./func/GlobalVariables\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport MultiTag from \"./MultiTag\";\r\nimport { Divider } from \"@mui/material\";\r\n\r\nconst credentials = {\r\n  \"google\":process.env.REACT_APP_GOOGLE_CLIENTID,\r\n  \"jwt\":process.env.REACT_APP_JWT\r\n}\r\n\r\nfunction Login() {\r\n\r\n    function onLogin(googleResponse){\r\n        console.log(googleResponse);\r\n        //var inseriu = saveToGoogleSheets(googleResponse.profileObj);\r\n        //if(inseriu) alert(\"Ponto registrado\");\r\n        //else alert(\"Falha no ponto\");\r\n\r\n        JWT_AUTH.saveSessionData(googleResponse.profileObj);\r\n        //GlobalVariables.profileData = googleResponse.profileObj;\r\n        const {name, imageUrl} = googleResponse.profileObj;\r\n        const profileData = {name: name, imageUrl:imageUrl};\r\n        Cookies.set(\"profile\",JSON.stringify(profileData));\r\n        \r\n        window.location.href=GlobalVariables.homepage +\"/\"+ GlobalVariables.profilePage;\r\n    }\r\n    \r\n    //const getSession = ()=>{\r\n    //  var client = JWT_AUTH.getSessionData();\r\n    //  if(client) window.location.href=GlobalVariables.homepage +\"/\"+ GlobalVariables.profilePage;\r\n    //}\r\n  return (\r\n    <div className=\"GoogleLogin\">\r\n        <GoogleLogin\r\n        clientId={credentials.google}\r\n        buttonText=\"Continue with Google\"\r\n        onSuccess={onLogin}\r\n        onFailure={console.log}\r\n        cookiePolicy={'single_host_origin'}\r\n        />\r\n        <Divider variant=\"fullWidth\" sx={{ margin: \"16px 0\", padding:\"10px\", width:\"70%\", mx: \"auto\" }} />\r\n        \r\n        <MultiTag hideNavBar={true}/>      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import '../App.css';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"Header\">\r\n        <div className='espacamento'/>\r\n        <h1>Collabin</h1>\r\n        <div className='espacamento'/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import './App.css';\r\n\r\nimport Login from './components/Login';\r\nimport Header from './components/Header';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header/>\r\n      <Login/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport JWT_AUTH from \"../func/JWT_AUTH\";\r\nimport app from \"../func/firebase_setup\";\r\nimport GlobalVariables from \"../func/GlobalVariables\";\r\nimport { getFirestore, doc, getDoc, setDoc, updateDoc, deleteField, deleteDoc, writeBatch } from \"firebase/firestore\"; // Updated import statements\r\nimport Cookies from \"js-cookie\";\r\n\r\n\r\nimport { Box, Typography, Avatar, Chip, TextField, Button, Divider,CircularProgress } from \"@mui/material\";\r\nimport NavBar from \"../NavBar\";\r\n\r\n// Initialize Firestore\r\nconst firestore = getFirestore(app);\r\n\r\nfunction emailToHash(email) {\r\n  let hash = 0;\r\n\r\n  for (let i = 0; i < email.length; i++) {\r\n    const char = email.charCodeAt(i);\r\n    hash = (hash << 5) - hash + char;\r\n  }\r\n\r\n  return Math.abs(hash) + Date.now(); // Convert to a positive number\r\n}\r\n\r\nconst removedTags=[];\r\n\r\nconst Page = () => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [tags, setTags] = useState([]);\r\n  const [newTag, setNewTag] = useState(\"\");\r\n  const [newPublicContact, setNewPublicContact] = useState(\"\");\r\n  const [newPortfolio, setNewPortfolio] = useState(\"\");\r\n  const [newCurriculo, setNewCurriculo] = useState(\"\");\r\n\r\n  const fillProfilePage = (data) => {    \r\n    setUserData(data);\r\n    if(data.tags) setTags(data.tags);\r\n    if(data.publicContact) setNewPublicContact(data.publicContact);\r\n    if(data.portfolio) setNewPortfolio(data.portfolio);\r\n    if(data.curriculo) setNewCurriculo(data.curriculo);\r\n  }\r\n\r\n  const deleteProfile = async () => {    \r\n    const client = JWT_AUTH.getSessionData();\r\n    if (!client) {\r\n      return;\r\n    }\r\n    const email = client.email;\r\n    const id = btoa(email);\r\n    \r\n    await deleteDoc( doc(firestore, \"public_users\", userData.public_id.toString()) );\r\n\r\n    await deleteDoc( doc(firestore, \"users\", id) );\r\n\r\n    localStorage.removeItem(\"userData\");\r\n    \r\n    alert(\"Profile deletado\");\r\n    \r\n    window.location.href=GlobalVariables.homepage +\"/\"+ GlobalVariables.loginPage;\r\n  }\r\n\r\n  const saveProfile = async () => {\r\n    const client = JWT_AUTH.getSessionData();\r\n    if (!client) {\r\n      return;\r\n    }\r\n    const email = client.email;\r\n    const id = btoa(email);\r\n    const userDocRef = doc(firestore, \"users\", id);\r\n\r\n    const updatedTags = tags;\r\n\r\n    // Update the user document with the new tags\r\n    updateDoc(userDocRef, \r\n      { tags: updatedTags, \r\n        publicContact: newPublicContact, \r\n        portfolio: newPortfolio,\r\n        curriculo: newCurriculo\r\n      });\r\n\r\n      // Create a batch\r\n      const batch = writeBatch(firestore);\r\n      updatedTags.forEach((element) => {\r\n        if (element !== \"\") {\r\n          const tagDocRef = doc(firestore, \"tags\", element.toLowerCase());\r\n      \r\n          // Queue an update operation in the batch\r\n          batch.set(\r\n            tagDocRef,\r\n            {\r\n              [userData.public_id.toString()]: true,\r\n            },\r\n            { merge: true } // Merge to update the field without overwriting other data\r\n          );\r\n        }\r\n      });\r\n      \r\n    removedTags.forEach(async (element) => {\r\n      if (element !== \"\") {\r\n        const tagDocRef = doc(firestore, \"tags\", element.toLowerCase());\r\n        \r\n        // Queue a delete operation in the batch\r\n        batch.update(tagDocRef, {\r\n          [userData.public_id.toString()]: deleteField(),\r\n        });\r\n        \r\n      }\r\n    });\r\n    \r\n    // Commit the batch to write all the updates in a single request\r\n    await batch.commit();\r\n    \r\n    \r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    storedData.tags = updatedTags;\r\n    storedData.publicContact= newPublicContact;\r\n    storedData.portfolio= newPortfolio;\r\n    storedData.curriculo= newCurriculo;    \r\n    localStorage.setItem(\"userData\", JSON.stringify(storedData));\r\n\r\n    alert(\"Perfil salvo\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const client = JWT_AUTH.getSessionData();\r\n      if (!client) {\r\n        return;\r\n      }\r\n      const email = client.email;\r\n      const id = btoa(email);\r\n      const userDocRef = doc(firestore, \"users\", id);\r\n\r\n      try {\r\n        // Check if user data is available in local storage\r\n        const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n        if (storedData) {\r\n          // If data is available locally, use it\r\n          fillProfilePage(storedData);\r\n        } else {\r\n          const userDoc = await getDoc(userDocRef);\r\n\r\n          if (userDoc.exists()) {\r\n            const data = userDoc.data();\r\n            fillProfilePage(data);\r\n\r\n            // Store user data in local storage\r\n            localStorage.setItem(\"userData\", JSON.stringify(data));\r\n          } else {\r\n            console.log(\"No data available\");\r\n            try {\r\n              const profileData = JSON.parse(Cookies.get(\"profile\"));\r\n              Cookies.remove(\"profile\"); // Run only once\r\n              const data = {\r\n                email: email,\r\n                name: profileData.name,\r\n                profilePictureUrl: profileData.imageUrl,\r\n                tags: [], // Initialize tags as an empty array\r\n              };\r\n              const public_id = emailToHash(data.email);\r\n              data.public_id = public_id;\r\n              await setDoc(userDocRef, data);\r\n              console.log(public_id.toString());\r\n              const publicDocRef = doc(\r\n                firestore,\r\n                \"public_users\",\r\n                public_id.toString()\r\n              );\r\n\r\n              // Create or update a public user document with an 'id' field\r\n              await setDoc(publicDocRef, { id: id });\r\n              fillProfilePage(data);\r\n\r\n              // Store user data in local storage\r\n              localStorage.setItem(\"userData\", JSON.stringify(data));\r\n            } catch (e) {\r\n              console.log(e.message);\r\n              console.log(\"No data available, creating new - error\");\r\n            }\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    }\r\n\r\n    getData();\r\n  }, []); // Empty dependency array to run this effect only once\r\n\r\n  const handleAddTag = () => {\r\n    if (newTag.trim() === \"\" || tags.includes(newTag)) return; // Don't add empty tags\r\n\r\n    //if (!/^[A-Za-z ]+$/.test(newTag)) {\r\n    //  // Check if the newTag contains only letters\r\n    //  alert(\"Tags can only contain letters.\");\r\n    //  return;\r\n    //}\r\n    const tag_formatted =  newTag.toLowerCase();\r\n    setNewTag(tag_formatted);\r\n\r\n    // Add the new tag to the tags array\r\n    const updatedTags = [...tags, tag_formatted];\r\n    setTags(updatedTags);\r\n\r\n    // Update the userData in the database\r\n    const updatedUserData = { ...userData, tags: updatedTags};\r\n    setUserData(updatedUserData);\r\n\r\n    // Clear the input field\r\n    setNewTag(\"\");\r\n  };\r\n  \r\n  const checkIfEnterTag = (e) => {\r\n    if(e.key === \"Enter\") handleAddTag();\r\n  }\r\n\r\n  const handleRemoveTag = (tagToRemove) => {\r\n    const updatedTags = tags.filter((tag) => tag !== tagToRemove);\r\n    setTags(updatedTags);\r\n    \r\n    removedTags.push(tagToRemove);\r\n\r\n    // Update the userData in the database\r\n    const updatedUserData = { ...userData, tags: updatedTags };\r\n    setUserData(updatedUserData);\r\n  };\r\n\r\n  const handleTagInputChange = (e) => {\r\n    setNewTag(e.target.value);\r\n  };\r\n  const handlePublicContactInputChange = (e) => {\r\n    setNewPublicContact(e.target.value);\r\n  };\r\n  const handlePortfolioInputChange = (e) => {\r\n    setNewPortfolio(e.target.value);\r\n  };\r\n  const handleCurriculoInputChange = (e) => {\r\n    setNewCurriculo(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {\r\n      userData ? ( <>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <NavBar/>\r\n        <h2>Profile Information</h2>\r\n        <Avatar\r\n          alt=\"Profile picture\"\r\n          src={userData.profilePictureUrl}\r\n          sx={{\r\n            width: 100,\r\n            height: 100,\r\n            margin: \"auto\",\r\n          }}\r\n        />\r\n        <Typography variant=\"h6\" component=\"h3\">\r\n          {userData.name}\r\n        </Typography>\r\n        <Typography variant=\"body1\">{userData.email}</Typography>\r\n        <Typography variant=\"body1\">\r\n          Public Id:\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            href={\r\n              GlobalVariables.homepage +\r\n              \"/\" +\r\n              GlobalVariables.publicProfilePage.split(\":\")[0] +\r\n              userData.public_id\r\n            }\r\n          >\r\n            {userData.public_id}\r\n          </a>\r\n        </Typography>\r\n\r\n        <Typography variant=\"body1\">Tags:</Typography>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\", // Change the direction to horizontal\r\n            flexWrap: \"wrap\", // Allow items to wrap to the next line\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {tags.map((tag, index) => (\r\n            <Chip\r\n              key={index}\r\n              label={tag}\r\n              onDelete={() => handleRemoveTag(tag)}\r\n              sx={{\r\n                margin: \"5px\",\r\n              }}\r\n            />\r\n          ))}\r\n        </Box>\r\n\r\n        <div style={{ display: \"flex\", flexDirection: \"row\", width: \"80%\" }}>\r\n        <TextField\r\n          label=\"Add a tag\"\r\n          value={newTag}\r\n          onChange={handleTagInputChange}\r\n          onKeyUp={checkIfEnterTag}\r\n          sx={{\r\n            width: \"100%\",\r\n            margin: \"10px -8px 0 0\",\r\n          }}\r\n        />\r\n        <Button onClick={handleAddTag} style={{borderRadius:\"12px\",height: \"60px\", margin: \"8px 0 0 8px\", backgroundColor:\"#f0f2f5\"}} >ADD</Button>\r\n      </div>\r\n        \r\n        <TextField\r\n          label=\"Add Public Contact\"\r\n          placeholder=\"Enter contact email, number, social media\"\r\n          value={newPublicContact}\r\n          onChange={handlePublicContactInputChange}\r\n          sx={{\r\n            width: \"80%\",\r\n            margin: \"10px 0\",\r\n          }}\r\n        />\r\n\r\n        \r\n        <TextField\r\n          label=\"Add portfolio URL\"\r\n          placeholder=\"Enter portfolio URL\"\r\n          value={newPortfolio}\r\n          onChange={handlePortfolioInputChange}\r\n          sx={{\r\n            width: \"80%\",\r\n            margin: \"10px 0\",\r\n          }}\r\n        />\r\n\r\n        \r\n        <TextField\r\n          label=\"Add curriculo URL\"\r\n          placeholder=\"Enter curriculo URL\"\r\n          value={newCurriculo}\r\n          onChange={handleCurriculoInputChange}\r\n          sx={{\r\n            width: \"80%\",\r\n            margin: \"10px 0\",\r\n          }}\r\n        />\r\n\r\n        <Button onClick={saveProfile} style={{borderRadius:\"12px\",height: \"60px\", width: \"80%\", marginTop: \"8px\", backgroundColor:\"#f0f2f5\"}} >SAVE</Button>\r\n\r\n        \r\n        <Divider variant=\"fullWidth\" sx={{ margin: \"16px 0\", padding:\"10px\", width:\"70%\", mx: \"auto\" }} />\r\n        \r\n        <Button onClick={deleteProfile} style={{color:\"red\", borderRadius:\"12px\",height: \"60px\", width: \"80%\", marginTop: \"8px\", backgroundColor:\"#f0f2f5\"}} >Delete Profile</Button>\r\n\r\n      </Box>\r\n          </>\r\n      ) : (\r\n        <>\r\n          <CircularProgress/>\r\n          <p>Loading profile data...</p>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport app from \"../func/firebase_setup\";\r\nimport { getFirestore, doc, getDoc } from \"firebase/firestore\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nimport { Box, Typography, Avatar, Chip, Link } from \"@mui/material\";\r\nimport GlobalVariables from \"../func/GlobalVariables\";\r\n\r\nconst firestore = getFirestore(app);\r\n\r\nconst PublicPage = () => {\r\n  const { profile_id } = useParams();\r\n  const [userData, setUserData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const publicUserDocRef = doc(firestore, \"public_users\", profile_id);\r\n\r\n      try {\r\n        const publicUserDoc = await getDoc(publicUserDocRef);\r\n\r\n        if (publicUserDoc.exists()) {\r\n          const data = publicUserDoc.data();\r\n          const userDocRef = doc(firestore, \"users\", data.id);\r\n          const userDoc = await getDoc(userDocRef);\r\n\r\n          if (userDoc.exists()) {\r\n            const userData = userDoc.data();\r\n            const { email, ...otherProps } = userData;\r\n            setUserData(otherProps);\r\n          } else {\r\n            console.log(\"No data available for user\");\r\n          }\r\n        } else {\r\n          console.log(\"No data available for public user\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    }\r\n\r\n    getData();\r\n  }, [profile_id]); // Empty dependency array to run this effect only once\r\n\r\n  return (\r\n    <div>\r\n  {userData ? (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <h2>Profile Information</h2>\r\n      <Typography variant=\"h6\" component=\"h3\">\r\n        {userData.name}\r\n      </Typography>\r\n\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          gap: \"10px\", // Add gap between the links\r\n          marginTop: \"10px\", // Add margin to the top\r\n        }}\r\n      >\r\n        {userData.publicContact ? (\r\n          <Link href={`${GlobalVariables.fixURL(userData.publicContact)}`} target=\"_blank\" rel=\"noreferrer\">\r\n            {userData.publicContact}\r\n          </Link>\r\n        ) : null}\r\n\r\n        {userData.portfolio ? (\r\n          <Link href={`${GlobalVariables.fixURL(userData.portfolio)}`} target=\"_blank\" rel=\"noreferrer\">\r\n            Portfolio\r\n          </Link>\r\n        ) : null}\r\n\r\n        {userData.curriculo ? (\r\n          <Link href={`${GlobalVariables.fixURL(userData.curriculo)}`} target=\"_blank\" rel=\"noreferrer\">\r\n            Curriculo\r\n          </Link>\r\n        ) : null}\r\n      </Box>\r\n\r\n\r\n      <Avatar\r\n        alt=\"Profile picture\"\r\n        src={userData.profilePictureUrl}\r\n        sx={{\r\n          width: 100,\r\n          height: 100,\r\n          margin: \"auto\",\r\n        }}\r\n      />\r\n      <Typography variant=\"body1\">Tags:</Typography>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\", // Change the direction to horizontal\r\n          flexWrap: \"wrap\", // Allow items to wrap to the next line\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {userData.tags.map((tag, index) => (\r\n          <Chip\r\n            key={index}\r\n            label={tag}\r\n            sx={{\r\n              margin: \"5px\",\r\n            }}\r\n          />\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  ) : (\r\n    <p>Loading profile data...</p>\r\n  )}\r\n</div>\r\n  );\r\n};\r\n\r\nexport default PublicPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getFirestore, doc, getDoc } from \"firebase/firestore\";\r\nimport app from \"../func/firebase_setup\"; // Make sure to import the Firebase app instance\r\nimport GlobalVariables from \"../func/GlobalVariables\";\r\n\r\nconst firestore = getFirestore(app);\r\n\r\nconst UsersByTag = () => {\r\n  const { tag } = useParams(); // Get the tag from the URL params\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        \r\n        const tagDocRef = doc(firestore, \"tags\", tag);\r\n        const tagDoc = await getDoc(tagDocRef);\r\n        console.log(tagDoc.data());\r\n        setUsers(Object.keys(tagDoc.data()));\r\n        } catch (error) {\r\n        console.error(\"Error fetching tag data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [tag]); // Fetch data whenever the tag URL parameter changes\r\n\r\n  return (\r\n    <div>\r\n      <h2>Users with Tag: {tag}</h2>\r\n      <div>\r\n        {users.map((user) => (\r\n          <div key={user}>\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            href={`${GlobalVariables.homepage}/${GlobalVariables.publicProfilePage.split(\":\")[0]}${user}`}\r\n          >\r\n            {user}\r\n          </a>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersByTag;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getFirestore, collection, getDocs } from \"firebase/firestore\";\r\nimport GlobalVariables from \"../func/GlobalVariables\";\r\nimport app from \"../func/firebase_setup\"; // Import your Firebase configuration file\r\n\r\nimport { Box, Link } from \"@mui/material\";\r\n\r\nconst firestore = getFirestore(app);\r\n\r\nconst AllTags = () => {\r\n  const { tag } = useParams();\r\n  const [tags, setTags] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Reference to the \"tags\" collection\r\n        const tagsCollection = collection(firestore, \"tags\");\r\n\r\n        // Fetch all documents within the \"tags\" collection\r\n        const querySnapshot = await getDocs(tagsCollection);\r\n\r\n        const tagData = [];\r\n        querySnapshot.forEach((doc) => {\r\n          // Get the document data and add it to the array\r\n          tagData.push(doc.id);\r\n        });\r\n\r\n        setTags(tagData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching tag data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [tag]);\r\n\r\n  return (\r\n    <div>\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <h2>All Tags:</h2>\r\n      <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\", // Change the direction to horizontal\r\n            flexWrap: \"wrap\", // Allow items to wrap to the next line\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n        {tags.map((tag) => (\r\n          <Link style={{ marginRight: \"10px\" }} key={tag} href={`${GlobalVariables.homepage}/${GlobalVariables.tagPage.split(\":\")[0]}${tag}`} rel=\"noreferrer\" target=\"_blank\">\r\n            {tag}\r\n          </Link>\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default AllTags;\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom/client\";\r\nimport {\r\n  createHashRouter,\r\n  RouterProvider,\r\n} from \"react-router-dom\";\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport GlobalVariables from \"./components/func/GlobalVariables\";\r\nimport Page from \"./components/firebasePages/Page\";\r\nimport PublicPage from \"./components/firebasePages/PublicPage\";\r\nimport UsersByTag from \"./components/firebasePages/UsersByTag\";\r\nimport AllTags from \"./components/firebasePages/AllTags\";\r\nimport MultiTag from \"./components/MultiTag\";\r\n\r\n// Set the initial hash value to '/#' when the application loads.\r\nif (window.location.hash === \"\") {\r\n  window.location.hash = \"/\";\r\n}\r\n\r\nconst router = createHashRouter([\r\n  {\r\n    path: \"/\",\r\n    element: <App />,\r\n  },\r\n  {\r\n    path: GlobalVariables.loginPage,\r\n    element: <App />\r\n  },\r\n  {\r\n    path: GlobalVariables.profilePage,\r\n    element: <Page />,\r\n  },\r\n  {\r\n    path: GlobalVariables.publicProfilePage,\r\n    element: <PublicPage />,\r\n  },\r\n  {\r\n    path: GlobalVariables.tagPage,\r\n    element: <UsersByTag />,\r\n  },\r\n  {\r\n    path: GlobalVariables.allTagPage,\r\n    element: <AllTags />,\r\n  },\r\n  {\r\n    path: GlobalVariables.multiTagPage,\r\n    element: <MultiTag />,\r\n  }\r\n]);\r\n\r\nReactDOM.createRoot(document.getElementById(\"root\")).render(\r\n  //<React.StrictMode> //fix useEffect running twice\r\n    <RouterProvider router={router} />\r\n  //</React.StrictMode>\r\n);\r\n"],"sourceRoot":""}