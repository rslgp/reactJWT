{"version":3,"sources":["components/func/GlobalVariables.js","components/func/JWT_AUTH.js","components/func/firebase_setup.js","components/func/queryTags.js","components/MultiTag.js","components/firebasePages/AutoComplete.js","components/Login.js","components/Header.js","App.js","components/firebasePages/Page.js","components/firebasePages/PublicPage.js","components/firebasePages/UsersByTag.js","components/firebasePages/AllTags.js","index.js"],"names":["GlobalVariables","malFormedURL","includes","jwt","require","credentials","process","cookieName","JWT_AUTH","getSessionData","token","Cookies","get","Error","client","verify","exp","Date","now","this","removeSessionData","e","console","log","message","window","location","href","homepage","loginPage","saveSessionData","clientData","data","email","Math","floor","sign","set","expires","remove","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","getFirestore","getUsersWithTags","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","tagsToFilter","usersCollection","queryForUsers","querySnapshot","usersWithTags","wrap","_context","prev","next","collection","query","where","getDocs","sent","forEach","doc","userData","every","tag","tags","push","abrupt","t0","error","stop","_x","apply","arguments","MultiTag","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","_useState3","_useState4","values","setValues","handleSplitValues","splitValues","split","map","value","trim","t1","_jsxs","Box","sx","display","flexDirection","justifyContent","alignItems","children","_jsx","TextField","type","placeholder","onChange","target","width","marginBottom","Button","onClick","variant","marginTop","List","index","ListItem","Link","className","rel","concat","publicProfilePage","public_id","name","publicContact","fixURL","_Fragment","portfolio","curriculo","AutoComplete","setTags","suggestions","setSuggestions","_useState5","_useState6","setValue","_useState7","_useState8","fetchDataClicked","setFetchDataClicked","useEffect","fetchData","tagsCollection","tagData","id","inputProps","event","_ref3","newValue","style","marginRight","Autosuggest","onSuggestionsFetchRequested","_ref2","inputValueLower","toLowerCase","filter","getSuggestions","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","flexWrap","to","Login","GoogleLogin","clientId","buttonText","onSuccess","googleResponse","profileObj","_googleResponse$profi","profileData","imageUrl","JSON","stringify","profilePage","onFailure","cookiePolicy","Divider","margin","padding","mx","Header","App","emailToHash","hash","i","length","charCodeAt","abs","removedTags","Page","setUserData","newTag","setNewTag","newPublicContact","setNewPublicContact","_useState9","_useState10","newPortfolio","setNewPortfolio","_useState11","_useState12","newCurriculo","setNewCurriculo","_getData","_callee3","userDocRef","userDoc","_data","publicDocRef","_context3","btoa","getDoc","exists","parse","profilePictureUrl","setDoc","toString","getData","handleAddTag","tag_formatted","updatedTags","_toConsumableArray","updatedUserData","_objectSpread","Avatar","alt","src","height","Typography","component","Chip","label","onDelete","tagToRemove","handleRemoveTag","onKeyUp","key","borderRadius","backgroundColor","updateDoc","element","tagDocRef","_defineProperty","_callee2","_context2","deleteField","_x2","alert","PublicPage","profile_id","useParams","publicUserDocRef","publicUserDoc","_userData","otherProps","_objectWithoutProperties","_excluded","UsersByTag","users","setUsers","tagDoc","Object","keys","user","AllTags","tagPage","router","createHashRouter","path","allTagPage","multiTagPage","ReactDOM","document","getElementById","render","RouterProvider"],"mappings":"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","file":"static/js/main.70c25cca.chunk.js","sourcesContent":["const GlobalVariables = {}\r\nGlobalVariables.homepage=\"https://rslgp.github.io/reactJWT/#\";\r\nGlobalVariables.loginPage=\"auth/login\";\r\nGlobalVariables.profilePage=\"page\";\r\nGlobalVariables.publicProfilePage=\"profile/:profile_id\";\r\nGlobalVariables.tagPage=\"tags/:tag\";\r\nGlobalVariables.allTagPage=\"tags\";\r\nGlobalVariables.multiTagPage=\"querytags\";\r\n\r\nGlobalVariables.fixURL = (malFormedURL) => {\r\n    if(!malFormedURL) return;\r\n\r\n    if(malFormedURL.includes(\"http\")){\r\n        return malFormedURL;\r\n    }\r\n    if(malFormedURL.includes(\"9\")){\r\n        return \"https://wa.me/55\"+malFormedURL;\r\n    }\r\n    return \"https://\"+malFormedURL;\r\n}\r\n\r\nexport default GlobalVariables;","import Cookies from \"js-cookie\";\r\nimport GlobalVariables from \"./GlobalVariables\";\r\nvar jwt = require(\"jsonwebtoken\");\r\n\r\nvar credentials = {}\r\ncredentials.jwt = process.env.REACT_APP_JWT;\r\n\r\nconst cookieName = \"access_token\";\r\nconst expirationHours=1;\r\n\r\nconst JWT_AUTH = {\r\n  getSessionData: function () {\r\n    try {\r\n        var token = Cookies.get(cookieName);\r\n        if (!token) {\r\n            // Token is not present\r\n            throw new Error('No Auth Cookie');\r\n        }\r\n        var client = jwt.verify(token, credentials.jwt);\r\n\r\n        // Check if token has expired\r\n        if (client.exp && client.exp < Date.now() / 1000) {\r\n            // Token has expired\r\n            this.removeSessionData(); // Remove the expired token            \r\n            throw new Error('Token Expired');\r\n        }\r\n        return client;\r\n    } catch (e) {\r\n        console.log(e.message);\r\n        window.location.href=GlobalVariables.homepage +\"/\"+ GlobalVariables.loginPage;\r\n        return null;\r\n    }\r\n  },\r\n  saveSessionData: function (clientData) {\r\n    const expInSeconds = (expirationHours+1) * 60 * 60;\r\n    const data = {\r\n      email: clientData.email,\r\n      exp: Math.floor(Date.now() / 1000) + expInSeconds,\r\n    };\r\n    var token = jwt.sign(data, credentials.jwt);\r\n    Cookies.set(cookieName, token, { expires: expirationHours / 24 }); // Set the cookie expiration in days\r\n  },\r\n  removeSessionData: function () {\r\n    Cookies.remove(cookieName);\r\n  },\r\n};\r\n\r\nexport default JWT_AUTH;\r\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE,\r\n  authDomain: \"myapp-d87de.firebaseapp.com\",\r\n  projectId: \"myapp-d87de\",\r\n  storageBucket: \"myapp-d87de.appspot.com\",\r\n  messagingSenderId: \"101658274836\",\r\n  appId: \"1:101658274836:web:364eb204ab277197d30b01\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nexport default app;","import { getFirestore, collection, query, where, getDocs } from \"firebase/firestore\";\r\nimport app from \"../func/firebase_setup\"; // Import your Firebase configuration file\r\n\r\nconst firestore = getFirestore(app);\r\n\r\nconst getUsersWithTags = async (tagsToFilter) => {\r\n  try {\r\n    // Reference to the \"users\" collection\r\n    const usersCollection = collection(firestore, \"users\");\r\n\r\n    // Define the tags you want to filter by\r\n    //const tagsToFilter = [\"react\", \"nodejs\"];\r\n\r\n    // Build a query to find users with both \"react\" and \"nodejs\" tags\r\n    const queryForUsers = query(\r\n      usersCollection,\r\n      where(\"tags\", \"array-contains-any\", tagsToFilter)\r\n    );\r\n\r\n    // Execute the query and get the result\r\n    const querySnapshot = await getDocs(queryForUsers);\r\n\r\n    // Process the query results\r\n    const usersWithTags = [];\r\n    querySnapshot.forEach((doc) => {\r\n      // Get user data\r\n      const userData = doc.data();\r\n\r\n      // Check if the user has both tags\r\n      if (\r\n        tagsToFilter.every((tag) => userData.tags.includes(tag))\r\n      ) {\r\n        usersWithTags.push(userData);\r\n      }\r\n    });\r\n\r\n    // usersWithTags now contains the list of users who have both \"react\" and \"nodejs\" tags\r\n    console.log(\"Users with both tags:\", usersWithTags);\r\n    return usersWithTags;\r\n  } catch (error) {\r\n    console.error(\"Error fetching users:\", error);\r\n  }\r\n};\r\nexport default getUsersWithTags;","import React, { useState } from \"react\";\r\nimport getUsersWithTags from './func/queryTags';\r\nimport GlobalVariables from \"./func/GlobalVariables\";\r\n\r\nimport {Box, TextField, Button, List, ListItem, Link} from \"@mui/material\";\r\nimport \"../App.css\";\r\n\r\nconst MultiTag = () => {\r\n  const [inputValue, setInputValue] = useState(\"\"); // State for input value\r\n  const [values, setValues] = useState([]); // State to store split values\r\n\r\n  // Function to handle input value changes\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  // Function to split input value by comma and update the 'values' state\r\n  const handleSplitValues = async () => {\r\n    const splitValues = inputValue.split(\",\").map((value) => value.trim());\r\n    setValues(await getUsersWithTags(splitValues));\r\n  };\r\n\r\nreturn (\r\n  <Box\r\n  sx={{\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  }}\r\n>\r\n  <h2>Buscador multi Tag</h2>\r\n  <TextField\r\n    type=\"text\"\r\n    placeholder=\"Insira as tags separado por virgulas (sem espaço)\"\r\n    value={inputValue}\r\n    onChange={handleInputChange}\r\n    sx={{\r\n      width: \"100%\",\r\n      marginBottom: \"10px\",\r\n    }}\r\n  />\r\n  <Button onClick={handleSplitValues} variant=\"contained\">Buscar</Button>\r\n\r\n  <Box\r\n    sx={{\r\n      marginTop: \"10px\",\r\n    }}\r\n  >\r\n    <h3>Resultado:</h3>\r\n    <List>\r\n      {values.map((value, index) => (\r\n        <ListItem key={index}>\r\n          <Link\r\n            className=\"espacamento\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            href={`${GlobalVariables.homepage}/${GlobalVariables.publicProfilePage.split(\":\")[0]}${value.public_id}`}\r\n          >\r\n            {value.public_id}\r\n          </Link>\r\n          {value.name}\r\n          \r\n          {value.publicContact ? \r\n          <Link className=\"espacamento\" href={`${GlobalVariables.fixURL(value.publicContact)}`} target=\"_blank\" rel=\"noreferrer\">\r\n            {value.publicContact}\r\n          </Link> : <></>}\r\n\r\n          {value.portfolio ? \r\n          <Link className=\"espacamento\" href={`${GlobalVariables.fixURL(value.portfolio)}`} target=\"_blank\" rel=\"noreferrer\">\r\n            portfolio\r\n          </Link> : <></>}\r\n\r\n          {value.curriculo ? \r\n          <Link className=\"espacamento\" href={`${GlobalVariables.fixURL(value.curriculo)}`} target=\"_blank\" rel=\"noreferrer\">\r\n            curriculo\r\n          </Link> : <></>}\r\n\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  </Box>\r\n</Box>\r\n);\r\n};\r\n\r\nexport default MultiTag;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Autosuggest from \"react-autosuggest\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getFirestore, collection, getDocs } from \"firebase/firestore\";\r\nimport app from \"../func/firebase_setup\"; // Import your Firebase configuration file\r\nimport { Box } from \"@mui/material\";\r\n\r\nconst firestore = getFirestore(app);\r\n\r\nconst AutoComplete = () => {\r\n  const [tags, setTags] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [value, setValue] = useState(\"\");\r\n  const [fetchDataClicked, setFetchDataClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Reference to the \"tags\" collection\r\n        const tagsCollection = collection(firestore, \"tags\");\r\n\r\n        // Fetch all documents within the \"tags\" collection\r\n        const querySnapshot = await getDocs(tagsCollection);\r\n\r\n        const tagData = [];\r\n        querySnapshot.forEach((doc) => {\r\n          // Get the document data and add it to the array\r\n          tagData.push(doc.id);\r\n        });\r\n\r\n        setTags(tagData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching tag data:\", error);\r\n      }\r\n    };\r\n\r\n    if (fetchDataClicked) {\r\n      // Fetch data only when the button is clicked\r\n      fetchData();\r\n    }\r\n  }, [fetchDataClicked]);\r\n\r\n  const getSuggestions = (inputValue) => {\r\n    const inputValueLower = inputValue.toLowerCase();\r\n    return tags.filter((tag) => tag.toLowerCase().includes(inputValueLower));\r\n  };\r\n\r\n  const onSuggestionsFetchRequested = ({ value }) => {\r\n    setSuggestions(getSuggestions(value));\r\n  };\r\n\r\n  const onSuggestionsClearRequested = () => {\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const onChange = (event, { newValue }) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const renderSuggestion = (suggestion) => (\r\n    \r\n    <Box\r\n    sx={{\r\n      display: \"flex\",\r\n      flexDirection: \"row\", // Change the direction to horizontal\r\n      flexWrap: \"wrap\", // Allow items to wrap to the next line\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    }}\r\n  >\r\n    <Link\r\n      to={`/tags/${suggestion}`} // Replace with your route for tag details\r\n      className=\"suggestion-link\"\r\n      rel=\"noreferrer\" \r\n      target=\"_blank\"\r\n    >\r\n      {suggestion}\r\n    </Link>\r\n    </Box>\r\n  );\r\n\r\n  const inputProps = {\r\n    placeholder: \"Search for a tag\",\r\n    value,\r\n    onChange,\r\n  };\r\n\r\n  const handleFetchDataClick = () => {\r\n    // Set the flag to trigger data fetching\r\n    setFetchDataClicked(true);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n      <b style={{ marginRight: \"10px\" }}>All Tags:</b>\r\n      <Autosuggest\r\n        suggestions={suggestions}\r\n        onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n        onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n        getSuggestionValue={(suggestion) => suggestion}\r\n        renderSuggestion={renderSuggestion}\r\n        inputProps={inputProps}\r\n      />\r\n      <div><button onClick={handleFetchDataClick}>Carregar</button></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoComplete;\r\n","import GoogleLogin from  \"@stack-pulse/next-google-login\"\r\n\r\n//import saveToGoogleSheets from './func/saveToGoogleSheets'\r\n\r\nimport JWT_AUTH from \"./func/JWT_AUTH\"\r\nimport GlobalVariables from \"./func/GlobalVariables\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport MultiTag from \"./MultiTag\";\r\nimport { Divider } from \"@mui/material\";\r\nimport AutoComplete from \"./firebasePages/AutoComplete\";\r\n\r\nconst credentials = {\r\n  \"google\":process.env.REACT_APP_GOOGLE_CLIENTID,\r\n  \"jwt\":process.env.REACT_APP_JWT\r\n}\r\n\r\nfunction Login() {\r\n\r\n    function onLogin(googleResponse){\r\n        console.log(googleResponse);\r\n        //var inseriu = saveToGoogleSheets(googleResponse.profileObj);\r\n        //if(inseriu) alert(\"Ponto registrado\");\r\n        //else alert(\"Falha no ponto\");\r\n\r\n        JWT_AUTH.saveSessionData(googleResponse.profileObj);\r\n        //GlobalVariables.profileData = googleResponse.profileObj;\r\n        const {name, imageUrl} = googleResponse.profileObj;\r\n        const profileData = {name: name, imageUrl:imageUrl};\r\n        Cookies.set(\"profile\",JSON.stringify(profileData));\r\n        \r\n        window.location.href=GlobalVariables.homepage +\"/\"+ GlobalVariables.profilePage;\r\n    }\r\n    \r\n    //const getSession = ()=>{\r\n    //  var client = JWT_AUTH.getSessionData();\r\n    //  if(client) window.location.href=GlobalVariables.homepage +\"/\"+ GlobalVariables.profilePage;\r\n    //}\r\n  return (\r\n    <div className=\"GoogleLogin\">\r\n        <GoogleLogin\r\n        clientId={credentials.google}\r\n        buttonText=\"Continue with Google\"\r\n        onSuccess={onLogin}\r\n        onFailure={console.log}\r\n        cookiePolicy={'single_host_origin'}\r\n        />\r\n        <Divider variant=\"fullWidth\" sx={{ margin: \"16px 0\", padding:\"10px\", width:\"70%\", mx: \"auto\" }} />\r\n        \r\n        <AutoComplete/>\r\n        <MultiTag/>      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import '../App.css';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"Header\">\r\n        <div className='espacamento'/>\r\n        <h1>CollabIn</h1>\r\n        <div className='espacamento'/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import './App.css';\r\n\r\nimport Login from './components/Login';\r\nimport Header from './components/Header';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header/>\r\n      <Login/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport JWT_AUTH from \"../func/JWT_AUTH\";\r\nimport app from \"../func/firebase_setup\";\r\nimport GlobalVariables from \"../func/GlobalVariables\";\r\nimport { getFirestore, doc, getDoc, setDoc, updateDoc, deleteField } from \"firebase/firestore\"; // Updated import statements\r\nimport Cookies from \"js-cookie\";\r\nimport AutoComplete from \"./AutoComplete\";\r\n\r\n\r\nimport { Box, Typography, Avatar, Chip, TextField, Button } from \"@mui/material\";\r\n\r\n// Initialize Firestore\r\nconst firestore = getFirestore(app);\r\n\r\nfunction emailToHash(email) {\r\n  let hash = 0;\r\n\r\n  for (let i = 0; i < email.length; i++) {\r\n    const char = email.charCodeAt(i);\r\n    hash = (hash << 5) - hash + char;\r\n  }\r\n\r\n  return Math.abs(hash) + Date.now(); // Convert to a positive number\r\n}\r\n\r\nconst removedTags=[];\r\n\r\nconst Page = () => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [tags, setTags] = useState([]);\r\n  const [newTag, setNewTag] = useState(\"\");\r\n  const [newPublicContact, setNewPublicContact] = useState(\"\");\r\n  const [newPortfolio, setNewPortfolio] = useState(\"\");\r\n  const [newCurriculo, setNewCurriculo] = useState(\"\");\r\n\r\n  const saveProfile = () => {\r\n    const client = JWT_AUTH.getSessionData();\r\n    if (!client) {\r\n      return;\r\n    }\r\n    const email = client.email;\r\n    const id = btoa(email);\r\n    const userDocRef = doc(firestore, \"users\", id);\r\n\r\n    const updatedTags = tags;\r\n\r\n    // Update the user document with the new tags\r\n    updateDoc(userDocRef, \r\n      { tags: updatedTags, \r\n        publicContact: newPublicContact, \r\n        portfolio: newPortfolio,\r\n        curriculo: newCurriculo\r\n      });\r\n\r\n    updatedTags.forEach(async (element) => {\r\n      if (element !== \"\") {\r\n        const tagDocRef = doc(firestore, \"tags\", element.toLowerCase());\r\n        \r\n        const tagDoc = await getDoc(tagDocRef);\r\n        if(tagDoc.exists()){\r\n          updateDoc(tagDocRef, {\r\n            [userData.public_id.toString()]: true\r\n          });\r\n        }else{\r\n          setDoc(tagDocRef, {\r\n            [userData.public_id.toString()]: true\r\n          });\r\n        }\r\n        \r\n      }\r\n    });\r\n\r\n    removedTags.forEach(async (element) => {\r\n      if (element !== \"\") {\r\n        const tagDocRef = doc(firestore, \"tags\", element.toLowerCase());\r\n        \r\n        updateDoc(tagDocRef, {\r\n          [userData.public_id.toString()]: deleteField()\r\n        });\r\n        \r\n      }\r\n    });\r\n\r\n    alert(\"Perfil salvo\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const client = JWT_AUTH.getSessionData();\r\n      if (!client) {\r\n        return;\r\n      }\r\n      const email = client.email;\r\n      const id = btoa(email);\r\n      const userDocRef = doc(firestore, \"users\", id);\r\n\r\n      try {\r\n        const userDoc = await getDoc(userDocRef);\r\n\r\n        if (userDoc.exists()) {\r\n          const data = userDoc.data();\r\n          setUserData(data);\r\n          if (data.tags) {\r\n            setTags(data.tags); // Set the existing tags\r\n          }          \r\n          if(data.publicContact) setNewPublicContact(data.publicContact);\r\n          if(data.portfolio) setNewPortfolio(data.portfolio);\r\n          if(data.curriculo) setNewCurriculo(data.curriculo);\r\n\r\n        } else {\r\n          console.log(\"No data available\");\r\n          try{\r\n            const profileData = JSON.parse(Cookies.get(\"profile\"));\r\n            Cookies.remove(\"profile\"); //run only once\r\n            const data = {\r\n              email: email,\r\n              name: profileData.name,\r\n              profilePictureUrl: profileData.imageUrl,\r\n              tags: [], // Initialize tags as an empty array\r\n            };\r\n            const public_id = emailToHash(data.email);\r\n            data.public_id = public_id;\r\n            await setDoc(userDocRef, data);\r\n            console.log(public_id.toString());\r\n            const publicDocRef = doc(firestore, \"public_users\", public_id.toString());\r\n\r\n            // Create or update a public user document with an 'id' field\r\n            await setDoc(publicDocRef, { id: id });\r\n            setUserData(data);\r\n          }catch(e){\r\n            console.log(e.message);\r\n            console.log(\"no data available create new - error\");\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    }\r\n\r\n    getData();\r\n  }, []); // Empty dependency array to run this effect only once\r\n\r\n  const handleAddTag = () => {\r\n    if (newTag.trim() === \"\" || tags.includes(newTag)) return; // Don't add empty tags\r\n\r\n    //if (!/^[A-Za-z ]+$/.test(newTag)) {\r\n    //  // Check if the newTag contains only letters\r\n    //  alert(\"Tags can only contain letters.\");\r\n    //  return;\r\n    //}\r\n    const tag_formatted =  newTag.toLowerCase();\r\n    setNewTag(tag_formatted);\r\n\r\n    // Add the new tag to the tags array\r\n    const updatedTags = [...tags, tag_formatted];\r\n    setTags(updatedTags);\r\n\r\n    // Update the userData in the database\r\n    const updatedUserData = { ...userData, tags: updatedTags};\r\n    setUserData(updatedUserData);\r\n\r\n    // Clear the input field\r\n    setNewTag(\"\");\r\n  };\r\n  \r\n  const checkIfEnterTag = (e) => {\r\n    if(e.key === \"Enter\") handleAddTag();\r\n  }\r\n\r\n  const handleRemoveTag = (tagToRemove) => {\r\n    const updatedTags = tags.filter((tag) => tag !== tagToRemove);\r\n    setTags(updatedTags);\r\n    \r\n    removedTags.push(tagToRemove);\r\n\r\n    // Update the userData in the database\r\n    const updatedUserData = { ...userData, tags: updatedTags };\r\n    setUserData(updatedUserData);\r\n  };\r\n\r\n  const handleTagInputChange = (e) => {\r\n    setNewTag(e.target.value);\r\n  };\r\n  const handlePublicContactInputChange = (e) => {\r\n    setNewPublicContact(e.target.value);\r\n  };\r\n  const handlePortfolioInputChange = (e) => {\r\n    setNewPortfolio(e.target.value);\r\n  };\r\n  const handleCurriculoInputChange = (e) => {\r\n    setNewCurriculo(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {userData ? ( <>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <h2>Profile Information</h2>\r\n        <Avatar\r\n          alt=\"Profile picture\"\r\n          src={userData.profilePictureUrl}\r\n          sx={{\r\n            width: 100,\r\n            height: 100,\r\n            margin: \"auto\",\r\n          }}\r\n        />\r\n        <Typography variant=\"h6\" component=\"h3\">\r\n          {userData.name}\r\n        </Typography>\r\n        <Typography variant=\"body1\">{userData.email}</Typography>\r\n        <Typography variant=\"body1\">\r\n          Public Id:\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            href={\r\n              GlobalVariables.homepage +\r\n              \"/\" +\r\n              GlobalVariables.publicProfilePage.split(\":\")[0] +\r\n              userData.public_id\r\n            }\r\n          >\r\n            {userData.public_id}\r\n          </a>\r\n        </Typography>\r\n\r\n        <AutoComplete/>\r\n\r\n        <Typography variant=\"body1\">Tags:</Typography>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\", // Change the direction to horizontal\r\n            flexWrap: \"wrap\", // Allow items to wrap to the next line\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {tags.map((tag, index) => (\r\n            <Chip\r\n              key={index}\r\n              label={tag}\r\n              onDelete={() => handleRemoveTag(tag)}\r\n              sx={{\r\n                margin: \"5px\",\r\n              }}\r\n            />\r\n          ))}\r\n        </Box>\r\n\r\n        <div style={{ display: \"flex\", flexDirection: \"row\", width: \"80%\" }}>\r\n        <TextField\r\n          label=\"Add a tag\"\r\n          value={newTag}\r\n          onChange={handleTagInputChange}\r\n          onKeyUp={checkIfEnterTag}\r\n          sx={{\r\n            width: \"100%\",\r\n            margin: \"10px -8px 0 0\",\r\n          }}\r\n        />\r\n        <Button onClick={handleAddTag} style={{borderRadius:\"12px\",height: \"60px\", margin: \"8px 0 0 8px\", backgroundColor:\"#f0f2f5\"}} >ADD</Button>\r\n      </div>\r\n        \r\n        <TextField\r\n          label=\"Add Public Contact\"\r\n          placeholder=\"Enter contact email, number, social media\"\r\n          value={newPublicContact}\r\n          onChange={handlePublicContactInputChange}\r\n          sx={{\r\n            width: \"80%\",\r\n            margin: \"10px 0\",\r\n          }}\r\n        />\r\n\r\n        \r\n        <TextField\r\n          label=\"Add portfolio URL\"\r\n          placeholder=\"Enter portfolio URL\"\r\n          value={newPortfolio}\r\n          onChange={handlePortfolioInputChange}\r\n          sx={{\r\n            width: \"80%\",\r\n            margin: \"10px 0\",\r\n          }}\r\n        />\r\n\r\n        \r\n        <TextField\r\n          label=\"Add curriculo URL\"\r\n          placeholder=\"Enter curriculo URL\"\r\n          value={newCurriculo}\r\n          onChange={handleCurriculoInputChange}\r\n          sx={{\r\n            width: \"80%\",\r\n            margin: \"10px 0\",\r\n          }}\r\n        />\r\n\r\n        <Button onClick={saveProfile} style={{borderRadius:\"12px\",height: \"60px\", width: \"100%\", marginTop: \"8px\", backgroundColor:\"#f0f2f5\"}} >SAVE</Button>\r\n      </Box>\r\n          </>\r\n      ) : (\r\n        <p>Loading profile data...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport app from \"../func/firebase_setup\";\r\nimport { getFirestore, doc, getDoc } from \"firebase/firestore\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nimport { Box, Typography, Avatar, Chip, Link } from \"@mui/material\";\r\nimport GlobalVariables from \"../func/GlobalVariables\";\r\n\r\nconst firestore = getFirestore(app);\r\n\r\nconst PublicPage = () => {\r\n  const { profile_id } = useParams();\r\n  const [userData, setUserData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const publicUserDocRef = doc(firestore, \"public_users\", profile_id);\r\n\r\n      try {\r\n        const publicUserDoc = await getDoc(publicUserDocRef);\r\n\r\n        if (publicUserDoc.exists()) {\r\n          const data = publicUserDoc.data();\r\n          const userDocRef = doc(firestore, \"users\", data.id);\r\n          const userDoc = await getDoc(userDocRef);\r\n\r\n          if (userDoc.exists()) {\r\n            const userData = userDoc.data();\r\n            const { email, ...otherProps } = userData;\r\n            setUserData(otherProps);\r\n          } else {\r\n            console.log(\"No data available for user\");\r\n          }\r\n        } else {\r\n          console.log(\"No data available for public user\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    }\r\n\r\n    getData();\r\n  }, [profile_id]); // Empty dependency array to run this effect only once\r\n\r\n  return (\r\n    <div>\r\n  {userData ? (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <h2>Profile Information</h2>\r\n      <Typography variant=\"h6\" component=\"h3\">\r\n        {userData.name}\r\n      </Typography>\r\n\r\n      { userData.publicContact ? \r\n      <Link href={`${GlobalVariables.fixURL(userData.publicContact)}`} target=\"_blank\" rel=\"noreferrer\">\r\n        {userData.publicContact}\r\n      </Link> : <></>}\r\n\r\n      \r\n      { userData.portfolio ? \r\n      <Link href={`${GlobalVariables.fixURL(userData.portfolio)}`} target=\"_blank\" rel=\"noreferrer\">\r\n        {userData.portfolio}\r\n      </Link> : <></>}\r\n\r\n      <Avatar\r\n        alt=\"Profile picture\"\r\n        src={userData.profilePictureUrl}\r\n        sx={{\r\n          width: 100,\r\n          height: 100,\r\n          margin: \"auto\",\r\n        }}\r\n      />\r\n      <Typography variant=\"body1\">Tags:</Typography>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\", // Change the direction to horizontal\r\n          flexWrap: \"wrap\", // Allow items to wrap to the next line\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {userData.tags.map((tag, index) => (\r\n          <Chip\r\n            key={index}\r\n            label={tag}\r\n            sx={{\r\n              margin: \"5px\",\r\n            }}\r\n          />\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  ) : (\r\n    <p>Loading profile data...</p>\r\n  )}\r\n</div>\r\n  );\r\n};\r\n\r\nexport default PublicPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getFirestore, doc, getDoc } from \"firebase/firestore\";\r\nimport app from \"../func/firebase_setup\"; // Make sure to import the Firebase app instance\r\nimport GlobalVariables from \"../func/GlobalVariables\";\r\n\r\nconst firestore = getFirestore(app);\r\n\r\nconst UsersByTag = () => {\r\n  const { tag } = useParams(); // Get the tag from the URL params\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        \r\n        const tagDocRef = doc(firestore, \"tags\", tag);\r\n        const tagDoc = await getDoc(tagDocRef);\r\n        console.log(tagDoc.data());\r\n        setUsers(Object.keys(tagDoc.data()));\r\n        } catch (error) {\r\n        console.error(\"Error fetching tag data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [tag]); // Fetch data whenever the tag URL parameter changes\r\n\r\n  return (\r\n    <div>\r\n      <h2>Users with Tag: {tag}</h2>\r\n      <div>\r\n        {users.map((user) => (\r\n          <div key={user}>\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            href={`${GlobalVariables.homepage}/${GlobalVariables.publicProfilePage.split(\":\")[0]}${user}`}\r\n          >\r\n            {user}\r\n          </a>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersByTag;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getFirestore, collection, getDocs } from \"firebase/firestore\";\r\nimport GlobalVariables from \"../func/GlobalVariables\";\r\nimport app from \"../func/firebase_setup\"; // Import your Firebase configuration file\r\n\r\nimport { Box, Link } from \"@mui/material\";\r\n\r\nconst firestore = getFirestore(app);\r\n\r\nconst AllTags = () => {\r\n  const { tag } = useParams();\r\n  const [tags, setTags] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Reference to the \"tags\" collection\r\n        const tagsCollection = collection(firestore, \"tags\");\r\n\r\n        // Fetch all documents within the \"tags\" collection\r\n        const querySnapshot = await getDocs(tagsCollection);\r\n\r\n        const tagData = [];\r\n        querySnapshot.forEach((doc) => {\r\n          // Get the document data and add it to the array\r\n          tagData.push(doc.id);\r\n        });\r\n\r\n        setTags(tagData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching tag data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [tag]);\r\n\r\n  return (\r\n    <div>\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <h2>All Tags:</h2>\r\n      <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\", // Change the direction to horizontal\r\n            flexWrap: \"wrap\", // Allow items to wrap to the next line\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n        {tags.map((tag) => (\r\n          <Link style={{ marginRight: \"10px\" }} key={tag} href={`${GlobalVariables.homepage}/${GlobalVariables.tagPage.split(\":\")[0]}${tag}`} rel=\"noreferrer\" target=\"_blank\">\r\n            {tag}\r\n          </Link>\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default AllTags;\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom/client\";\r\nimport {\r\n  createHashRouter,\r\n  RouterProvider,\r\n} from \"react-router-dom\";\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport GlobalVariables from \"./components/func/GlobalVariables\";\r\nimport Page from \"./components/firebasePages/Page\";\r\nimport PublicPage from \"./components/firebasePages/PublicPage\";\r\nimport UsersByTag from \"./components/firebasePages/UsersByTag\";\r\nimport AllTags from \"./components/firebasePages/AllTags\";\r\nimport MultiTag from \"./components/MultiTag\";\r\n\r\n// Set the initial hash value to '/#' when the application loads.\r\nif (window.location.hash === \"\") {\r\n  window.location.hash = \"/\";\r\n}\r\n\r\nconst router = createHashRouter([\r\n  {\r\n    path: \"/\",\r\n    element: <App />,\r\n  },\r\n  {\r\n    path: GlobalVariables.loginPage,\r\n    element: <App />\r\n  },\r\n  {\r\n    path: GlobalVariables.profilePage,\r\n    element: <Page />,\r\n  },\r\n  {\r\n    path: GlobalVariables.publicProfilePage,\r\n    element: <PublicPage />,\r\n  },\r\n  {\r\n    path: GlobalVariables.tagPage,\r\n    element: <UsersByTag />,\r\n  },\r\n  {\r\n    path: GlobalVariables.allTagPage,\r\n    element: <AllTags />,\r\n  },\r\n  {\r\n    path: GlobalVariables.multiTagPage,\r\n    element: <MultiTag />,\r\n  }\r\n]);\r\n\r\nReactDOM.createRoot(document.getElementById(\"root\")).render(\r\n  //<React.StrictMode> //fix useEffect running twice\r\n    <RouterProvider router={router} />\r\n  //</React.StrictMode>\r\n);\r\n"],"sourceRoot":""}