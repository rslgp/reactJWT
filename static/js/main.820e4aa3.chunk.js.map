{"version":3,"sources":["components/func/saveToGoogleSheets.js","components/Login.js","components/Header.js","App.js","index.js"],"names":["credentials","process","doc","GoogleSpreadsheet","require","spreadsheetId","getLocalDate","currentDate","Date","setUTCHours","getUTCHours","hours","getHours","toString","padStart","minutes","getMinutes","day","getDate","month","getMonth","year","getFullYear","slice","concat","_saveToGoogleSheets","_asyncToGenerator","_regeneratorRuntime","mark","_callee","profileObj","sheet","row","wrap","_context","prev","next","useServiceAccountAuth","client_email","email","private_key","key","loadInfo","sheetsByIndex","Email","DateISO","Nome","name","console","log","addRow","sent","abrupt","t0","message","stop","apply","arguments","saveToGoogleSheets","_x","jwt","Login","saveCookie","data","token","sign","Cookies","set","window","teste","get","client","verify","_jsxs","className","children","_jsx","onClick","GoogleLogin","clientId","buttonText","onSuccess","googleResponse","alert","onFailure","cookiePolicy","Header","App","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"8dAAIA,EAAc,CAClBA,MAAoBC,2DACpBD,IAAkBC,usDAClBD,cAA4BC,gDAQtBC,EAAM,IAAIC,EAHcC,EAAQ,KAA9BD,mBAG0BH,EAAYK,eAE9C,SAASC,IAEP,IAAMC,EAAc,IAAIC,KAGxBD,EAAYE,YAAYF,EAAYG,eAKpC,IAAMC,EAAQJ,EAAYK,WAAWC,WAAWC,SAAS,EAAG,KACtDC,EAAUR,EAAYS,aAAaH,WAAWC,SAAS,EAAG,KAC1DG,EAAMV,EAAYW,UAAUL,WAAWC,SAAS,EAAG,KACnDK,GAASZ,EAAYa,WAAa,GAAGP,WAAWC,SAAS,EAAG,KAC5DO,EAAOd,EAAYe,cAAcT,WAAWU,OAAO,GAGzD,MADmB,GAAAC,OAAMb,EAAK,KAAAa,OAAIT,EAAO,KAAAS,OAAIP,EAAG,KAAAO,OAAIL,EAAK,KAAAK,OAAIH,EAG/D,CAEiC,SAAAI,IAoBhC,OApBgCA,EAAAC,YAAAC,cAAAC,MAAjC,SAAAC,EAAkCC,GAAU,IAAAC,EAAAC,EAAA,OAAAL,cAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAElClC,EAAImC,sBAAsB,CAC5BC,aAActC,EAAYuC,MAC1BC,YAAaxC,EAAYyC,MAC1B,KAAD,SAAAP,EAAAE,KAAA,EAEIlC,EAAIwC,WAAW,KAAD,EAKH,OAHXX,EAAQ7B,EAAIyC,cAAc,GAE1BX,EAAM,CAAEY,MAAOd,EAAWS,MAAOM,QAASvC,IAAgBwC,KAAMhB,EAAWiB,MACjFC,QAAQC,IAAIjB,GAAKE,EAAAE,KAAA,GACwBL,EAAMmB,OAAOlB,GAAK,KAAD,GAA1B,IAAAE,EAAAiB,KACA,CAADjB,EAAAE,KAAA,gBAAAF,EAAAkB,OAAA,UAAS,GAAI,QAAAlB,EAAAE,KAAA,iBAGpB,OAHoBF,EAAAC,KAAA,GAAAD,EAAAmB,GAAAnB,EAAA,SAE1Cc,QAAQC,IAAI,wBACZD,QAAQC,IAAIf,EAAAmB,GAAEC,SAAQpB,EAAAkB,OAAA,UACf,GAAK,yBAAAlB,EAAAqB,OAAA,GAAA1B,EAAA,oBAEjB2B,MAAA,KAAAC,UAAA,CAEcC,MAxBd,SAEgCC,GAAA,OAAAlC,EAAA+B,MAAC,KAADC,UAAA,E,0BC5B7BG,EAAMxD,EAAQ,KAEZJ,EACKC,2EADLD,EAEEC,mEAuCO4D,MApCf,WAUI,SAASC,EAAWhC,GAClB,IAAMiC,EAAO,CAAC,MAAQjC,EAAWS,OAC7ByB,EAAQJ,EAAIK,KAAKF,EAAM/D,GAC3BkE,IAAQC,IAAI,eAAeH,EAC7B,CAMF,OALEI,OAAOC,MAAO,WACZ,IAAIL,EAAQE,IAAQI,IAAI,gBACpBC,EAASX,EAAIY,OAAOR,EAAOhE,GAC/BgD,QAAQC,IAAIsB,EAAOhC,MACrB,EAEAkC,eAAA,OAAKC,UAAU,cAAaC,SAAA,CACxBC,cAAA,UAAQC,QAAS,WAAKf,EAAW,CAAC,MAAQ,SAAS,EAAEa,SAAC,UACtDC,cAACE,IAAW,CACZC,SAAU/E,EACVgF,WAAW,uBACXC,UAxBJ,SAAiBC,GACblC,QAAQC,IAAIiC,GACExB,EAAmBwB,EAAepD,YACpCqD,MAAM,oBACbA,MAAM,kBACXrB,EAAWoB,EAAepD,WAC9B,EAmBIsD,UAAWpC,QAAQC,IACnBoC,aAAc,uBAEdT,cAAA,UAAQC,QAAS,WAAKT,OAAOC,OAAO,EAAEM,SAAC,aAI/C,ECnCeW,MAVf,WACE,OACEb,eAAA,OAAKC,UAAU,SAAQC,SAAA,CACnBC,cAAA,OAAKF,UAAU,gBACfE,cAAA,MAAAD,SAAI,uBACJC,cAAA,OAAKF,UAAU,kBAGvB,ECIea,MATf,WACE,OACEd,eAAA,OAAKC,UAAU,MAAKC,SAAA,CAClBC,cAACU,EAAM,IACPV,cAACf,EAAK,MAGZ,ECPa2B,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHhB,cAACiB,IAAMC,WAAU,CAAAnB,SACfC,cAACW,EAAG,M","file":"static/js/main.820e4aa3.chunk.js","sourcesContent":["var credentials = {}\ncredentials.email = process.env.REACT_APP_GOOGLE_EMAIL;\ncredentials.key = process.env.REACT_APP_GOOGLE_KEY;\ncredentials.spreadsheetId = process.env.REACT_APP_GOOGLE_SHEET;\n//console.log(process.env);\n//console.log(credentials.key);\n//console.log(process.env.REACT_APP_GOOGLE_KEY);\n\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\n\n// Google Sheets Document ID -- PROD\nconst doc = new GoogleSpreadsheet(credentials.spreadsheetId);\n\nfunction getLocalDate(){\n  // Create a new Date object\n  const currentDate = new Date();\n\n  // Adjust the time zone offset to GMT+3 (EEST)\n  currentDate.setUTCHours(currentDate.getUTCHours());\n\n  // Format the date as a string in ISO format\n  //const isoDateGMTPlus3 = currentDate.toISOString();\n\n  const hours = currentDate.getHours().toString().padStart(2, '0');\n  const minutes = currentDate.getMinutes().toString().padStart(2, '0');\n  const day = currentDate.getDate().toString().padStart(2, '0');\n  const month = (currentDate.getMonth() + 1).toString().padStart(2, '0'); // Months are 0-based\n  const year = currentDate.getFullYear().toString().slice(-2);\n\n  const formattedDate = `${hours}:${minutes} ${day}/${month}/${year}`;\n  return formattedDate;\n\n}\n\nasync function saveToGoogleSheets(profileObj) {\n  try{\n    await doc.useServiceAccountAuth({\n        client_email: credentials.email,\n        private_key: credentials.key,\n    });\n\n    await doc.loadInfo(); // Loads document properties and worksheets\n\n    const sheet = doc.sheetsByIndex[0];\n    \n    const row = { Email: profileObj.email, DateISO: getLocalDate(), Nome: profileObj.name};\n    console.log(row);\n    var GoogleSpreadsheetRowInserted = await sheet.addRow(row);\n    if(GoogleSpreadsheetRowInserted) return true;\n  }catch(e){\n      console.log(\"erro inserindo sheet\");\n      console.log(e.message)\n      return false;\n  }\n}\n\nexport default saveToGoogleSheets;\n","import GoogleLogin from  \"@stack-pulse/next-google-login\"\n\nimport saveToGoogleSheets from './func/saveToGoogleSheets'\n\nimport Cookies from \"js-cookie\"\n\nvar jwt = require(\"jsonwebtoken\")\n\nconst credentials = {\n  \"google\":process.env.REACT_APP_GOOGLE_CLIENTID,\n  \"jwt\":process.env.REACT_APP_JWT\n}\n\nfunction Login() {\n\n    function onLogin(googleResponse){\n        console.log(googleResponse);\n        var inseriu = saveToGoogleSheets(googleResponse.profileObj);\n        if(inseriu) alert(\"Ponto registrado\");\n        else alert(\"Falha no ponto\")\n        saveCookie(googleResponse.profileObj)\n    }\n\n    function saveCookie(profileObj){\n      const data = {\"email\":profileObj.email};\n      var token = jwt.sign(data, credentials.jwt);\n      Cookies.set('access_token',token);\n    }\n    window.teste= ()=>{\n      var token = Cookies.get(\"access_token\");\n      var client = jwt.verify(token, credentials.jwt);\n      console.log(client.email)\n    }\n  return (\n    <div className=\"GoogleLogin\">\n        <button onClick={()=>{saveCookie({\"email\":\"teste\"})}}>TESTE</button>\n        <GoogleLogin\n        clientId={credentials.google}\n        buttonText=\"Continue with Google\"\n        onSuccess={onLogin}\n        onFailure={console.log}\n        cookiePolicy={'single_host_origin'}\n        />\n        <button onClick={()=>{window.teste()}}>TESTE2</button>\n        \n    </div>\n  );\n}\n\nexport default Login;\n","import '../App.css';\n\nfunction Header() {\n  return (\n    <div className=\"Header\">\n        <div className='espacamento'/>\n        <h1>Bater ponto na ECS</h1>\n        <div className='espacamento'/>\n    </div>\n  );\n}\n\nexport default Header;\n","import './App.css';\n\nimport Login from './components/Login';\nimport Header from './components/Header';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Login/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}