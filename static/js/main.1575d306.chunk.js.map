{"version":3,"sources":["components/func/saveToGoogleSheets.js","components/func/GlobalVariables.js","components/func/JWT_AUTH.js","components/Login.js","components/Header.js","App.js","components/func/firebase_setup.js","components/Page.js","index.js"],"names":["credentials","email","process","REACT_APP_GOOGLE_EMAIL","key","REACT_APP_GOOGLE_KEY","spreadsheetId","REACT_APP_GOOGLE_SHEET","doc","GoogleSpreadsheet","require","getLocalDate","currentDate","Date","setUTCHours","getUTCHours","hours","getHours","toString","padStart","minutes","getMinutes","day","getDate","month","getMonth","year","getFullYear","slice","concat","_saveToGoogleSheets","_asyncToGenerator","_regeneratorRuntime","mark","_callee","profileObj","sheet","row","wrap","_context","prev","next","useServiceAccountAuth","client_email","private_key","loadInfo","sheetsByIndex","Email","DateISO","Nome","name","console","log","addRow","sent","abrupt","t0","message","stop","apply","arguments","saveToGoogleSheets","_x","GlobalVariables","loginPage","baseURL","profilePage","jwt","cookieName","JWT_AUTH","getSessionData","token","Cookies","get","Error","client","verify","exp","now","this","removeSessionData","e","window","location","href","loginpage","saveSessionData","clientData","data","Math","floor","sign","set","expires","remove","Login","_jsxs","className","children","_jsx","onClick","GoogleLogin","clientId","buttonText","onSuccess","googleResponse","alert","profileData","onFailure","cookiePolicy","Header","App","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getDatabase","Page","_useState","useState","_useState2","_slicedToArray","userData","setUserData","useEffect","userPath","btoa","userRef","ref","then","snapshot","exists","val","profilePictureUrl","imageUrl","catch","error","getData","src","alt","style","maxWidth","maxHeight","router","createHashRouter","path","element","ReactDOM","document","getElementById","render","React","RouterProvider"],"mappings":"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","file":"static/js/main.1575d306.chunk.js","sourcesContent":["var credentials = {}\ncredentials.email = process.env.REACT_APP_GOOGLE_EMAIL;\ncredentials.key = process.env.REACT_APP_GOOGLE_KEY;\ncredentials.spreadsheetId = process.env.REACT_APP_GOOGLE_SHEET;\n//console.log(process.env);\n//console.log(credentials.key);\n//console.log(process.env.REACT_APP_GOOGLE_KEY);\n\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\n\n// Google Sheets Document ID -- PROD\nconst doc = new GoogleSpreadsheet(credentials.spreadsheetId);\n\nfunction getLocalDate(){\n  // Create a new Date object\n  const currentDate = new Date();\n\n  // Adjust the time zone offset to GMT+3 (EEST)\n  currentDate.setUTCHours(currentDate.getUTCHours());\n\n  // Format the date as a string in ISO format\n  //const isoDateGMTPlus3 = currentDate.toISOString();\n\n  const hours = currentDate.getHours().toString().padStart(2, '0');\n  const minutes = currentDate.getMinutes().toString().padStart(2, '0');\n  const day = currentDate.getDate().toString().padStart(2, '0');\n  const month = (currentDate.getMonth() + 1).toString().padStart(2, '0'); // Months are 0-based\n  const year = currentDate.getFullYear().toString().slice(-2);\n\n  const formattedDate = `${hours}:${minutes} ${day}/${month}/${year}`;\n  return formattedDate;\n\n}\n\nasync function saveToGoogleSheets(profileObj) {\n  try{\n    await doc.useServiceAccountAuth({\n        client_email: credentials.email,\n        private_key: credentials.key,\n    });\n\n    await doc.loadInfo(); // Loads document properties and worksheets\n\n    const sheet = doc.sheetsByIndex[0];\n    \n    const row = { Email: profileObj.email, DateISO: getLocalDate(), Nome: profileObj.name};\n    console.log(row);\n    var GoogleSpreadsheetRowInserted = await sheet.addRow(row);\n    if(GoogleSpreadsheetRowInserted) return true;\n  }catch(e){\n      console.log(\"erro inserindo sheet\");\n      console.log(e.message)\n      return false;\n  }\n}\n\nexport default saveToGoogleSheets;\n","const GlobalVariables = {}\nGlobalVariables.baseURL=\"#/\";\nGlobalVariables.loginPage=GlobalVariables.baseURL+\"auth/login\";\nGlobalVariables.profilePage=GlobalVariables.baseURL+\"page\";\nexport default GlobalVariables;","import Cookies from \"js-cookie\";\nimport GlobalVariables from \"./GlobalVariables\";\nvar jwt = require(\"jsonwebtoken\");\n\nvar credentials = {}\ncredentials.jwt = process.env.REACT_APP_JWT;\n\nconst cookieName = \"access_token\";\nconst expirationHours=1;\n\nconst JWT_AUTH = {\n  getSessionData: function () {\n    try {\n        var token = Cookies.get(cookieName);\n        if (!token) {\n            // Token is not present\n            throw new Error('No Auth Cookie');\n        }\n        var client = jwt.verify(token, credentials.jwt);\n\n        // Check if token has expired\n        if (client.exp && client.exp < Date.now() / 1000) {\n            // Token has expired\n            this.removeSessionData(); // Remove the expired token            \n            throw new Error('Token Expired');\n        }\n        return client;\n    } catch (e) {\n        console.log(e.message);\n        window.location.href = GlobalVariables.loginpage;\n        return null;\n    }\n  },\n  saveSessionData: function (clientData) {\n    const expInSeconds = (expirationHours+1) * 60 * 60;\n    const data = {\n      email: clientData.email,\n      exp: Math.floor(Date.now() / 1000) + expInSeconds,\n    };\n    var token = jwt.sign(data, credentials.jwt);\n    Cookies.set(cookieName, token, { expires: expirationHours / 24 }); // Set the cookie expiration in days\n  },\n  removeSessionData: function () {\n    Cookies.remove(cookieName);\n  },\n};\n\nexport default JWT_AUTH;\n","import GoogleLogin from  \"@stack-pulse/next-google-login\"\n\nimport saveToGoogleSheets from './func/saveToGoogleSheets'\n\nimport JWT_AUTH from \"./func/JWT_AUTH\"\nimport GlobalVariables from \"./func/GlobalVariables\";\n\nconst credentials = {\n  \"google\":process.env.REACT_APP_GOOGLE_CLIENTID,\n  \"jwt\":process.env.REACT_APP_JWT\n}\n\nfunction Login() {\n\n    function onLogin(googleResponse){\n        console.log(googleResponse);\n        var inseriu = saveToGoogleSheets(googleResponse.profileObj);\n        if(inseriu) alert(\"Ponto registrado\");\n        else alert(\"Falha no ponto\");\n\n        JWT_AUTH.saveSessionData(googleResponse.profileObj);\n        GlobalVariables.profileData = googleResponse.profileObj;\n        \n        window.location.href=GlobalVariables.profilePage;\n    }\n    \n    const getSession = ()=>{\n      var client = JWT_AUTH.getSessionData();\n      if(client) window.location.href=GlobalVariables.profilePage;\n    }\n  return (\n    <div className=\"GoogleLogin\">\n        <button onClick={()=>{JWT_AUTH.saveSessionData({\"email\":\"teste\"})}}>TESTE</button>\n        <GoogleLogin\n        clientId={credentials.google}\n        buttonText=\"Continue with Google\"\n        onSuccess={onLogin}\n        onFailure={console.log}\n        cookiePolicy={'single_host_origin'}\n        />\n        <button onClick={()=>{getSession()}}>TESTE2</button>\n        \n    </div>\n  );\n}\n\nexport default Login;\n","import '../App.css';\n\nfunction Header() {\n  return (\n    <div className=\"Header\">\n        <div className='espacamento'/>\n        <h1>Bater ponto na ECS</h1>\n        <div className='espacamento'/>\n    </div>\n  );\n}\n\nexport default Header;\n","import './App.css';\n\nimport Login from './components/Login';\nimport Header from './components/Header';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Login/>\n    </div>\n  );\n}\n\nexport default App;\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE,\n  authDomain: \"myapp-d87de.firebaseapp.com\",\n  projectId: \"myapp-d87de\",\n  storageBucket: \"myapp-d87de.appspot.com\",\n  messagingSenderId: \"101658274836\",\n  appId: \"1:101658274836:web:364eb204ab277197d30b01\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport default app;","import React, { useState, useEffect } from \"react\";\nimport JWT_AUTH from \"./func/JWT_AUTH\";\nimport app from \"./func/firebase_setup\";\nimport { getDatabase, ref, get, set } from \"firebase/database\";\nimport GlobalVariables from \"./func/GlobalVariables\";\n\nconst db = getDatabase(app);\n\nconst Page = () => {\n  const [userData, setUserData] = useState(null);\n\n  useEffect(() => {\n    function getData() {\n      const client = JWT_AUTH.getSessionData();\n      if (!client) {\n        return;\n      }\n      const email = client.email;\n      const id = btoa(email);\n      const userPath=\"users/\" + id;\n      const userRef = ref(db, userPath);\n\n      get(userRef)\n        .then((snapshot) => {\n          if (snapshot.exists()) {\n            const data = snapshot.val();\n            setUserData(data);\n          } else {\n            console.log(\"No data available\");\n            const data = {\n              email: email,\n              name: GlobalVariables.profileData.name,              \n              profilePictureUrl: GlobalVariables.profileData.imageUrl,\n            };\n            set(userRef, data);\n            \n            setUserData(data);\n          }\n        })\n        .catch((error) => {\n          console.error(\"Error fetching data:\", error);\n        });\n    }\n\n    getData();\n  }, []); // Empty dependency array to run this effect only once\n\n  return (\n    <div>\n      {userData ? (\n        <div>\n          <h2>Profile Information</h2>\n          <div>\n            <strong>Name:</strong> {userData.name}\n          </div>\n          <div>\n            <strong>Email:</strong> {userData.email}\n          </div>\n          <div>\n            <img\n              src={userData.profilePictureUrl}\n              alt=\"Profile\"\n              style={{ maxWidth: \"100px\", maxHeight: \"100px\" }}\n            />\n          </div>\n        </div>\n      ) : (\n        <p>Loading profile data...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Page;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom/client\";\nimport {\n  createHashRouter,\n  RouterProvider,\n} from \"react-router-dom\";\n\nimport './index.css';\nimport App from './App';\nimport Page from \"./components/Page\";\nimport GlobalVariables from \"./components/func/GlobalVariables\";\n\nconst router = createHashRouter([\n  {\n    path: \"/\",\n    element: <App />,\n  },\n  {\n    path: GlobalVariables.loginPage,\n    element: <App />\n  },\n  {\n    path: GlobalVariables.profilePage,\n    element: <Page />,\n  }\n]);\n\nReactDOM.createRoot(document.getElementById(\"root\")).render(\n  <React.StrictMode>\n    <RouterProvider router={router} />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}