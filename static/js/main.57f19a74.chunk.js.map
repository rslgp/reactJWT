{"version":3,"sources":["components/func/saveToGoogleSheets.js","components/Login.js","components/Header.js","App.js","index.js"],"names":["credentials","email","process","REACT_APP_GOOGLE_EMAIL","key","REACT_APP_GOOGLE_KEY","spreadsheetId","REACT_APP_GOOGLE_SHEET","doc","GoogleSpreadsheet","require","getLocalDate","currentDate","Date","setUTCHours","getUTCHours","hours","getHours","toString","padStart","minutes","getMinutes","day","getDate","month","getMonth","year","getFullYear","slice","concat","_saveToGoogleSheets","_asyncToGenerator","_regeneratorRuntime","mark","_callee","profileObj","sheet","row","wrap","_context","prev","next","useServiceAccountAuth","client_email","private_key","loadInfo","sheetsByIndex","Email","DateISO","Nome","name","console","log","addRow","sent","abrupt","t0","message","stop","apply","arguments","saveToGoogleSheets","_x","Login","_jsx","className","children","GoogleLogin","clientId","REACT_APP_GOOGLE_CLIENTID","buttonText","onSuccess","googleResponse","alert","onFailure","cookiePolicy","Header","_jsxs","App","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"0cAAIA,EAAc,CAAC,EACnBA,EAAYC,MAAQC,6IAAYC,uBAChCH,EAAYI,IAAMF,6IAAYG,qBAC9BL,EAAYM,cAAgBJ,6IAAYK,uBAKxC,IAGMC,EAAM,IAAIC,EAHcC,EAAQ,KAA9BD,mBAG0BT,EAAYM,eAE9C,SAASK,IAEP,IAAMC,EAAc,IAAIC,KAGxBD,EAAYE,YAAYF,EAAYG,eAKpC,IAAMC,EAAQJ,EAAYK,WAAWC,WAAWC,SAAS,EAAG,KACtDC,EAAUR,EAAYS,aAAaH,WAAWC,SAAS,EAAG,KAC1DG,EAAMV,EAAYW,UAAUL,WAAWC,SAAS,EAAG,KACnDK,GAASZ,EAAYa,WAAa,GAAGP,WAAWC,SAAS,EAAG,KAC5DO,EAAOd,EAAYe,cAAcT,WAAWU,OAAO,GAGzD,MADmB,GAAAC,OAAMb,EAAK,KAAAa,OAAIT,EAAO,KAAAS,OAAIP,EAAG,KAAAO,OAAIL,EAAK,KAAAK,OAAIH,EAG/D,CAEiC,SAAAI,IAoBhC,OApBgCA,EAAAC,YAAAC,cAAAC,MAAjC,SAAAC,EAAkCC,GAAU,IAAAC,EAAAC,EAAA,OAAAL,cAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAElCjC,EAAIkC,sBAAsB,CAC5BC,aAAc3C,EAAYC,MAC1B2C,YAAa5C,EAAYI,MAC1B,KAAD,SAAAmC,EAAAE,KAAA,EAEIjC,EAAIqC,WAAW,KAAD,EAKH,OAHXT,EAAQ5B,EAAIsC,cAAc,GAE1BT,EAAM,CAAEU,MAAOZ,EAAWlC,MAAO+C,QAASrC,IAAgBsC,KAAMd,EAAWe,MACjFC,QAAQC,IAAIf,GAAKE,EAAAE,KAAA,GACwBL,EAAMiB,OAAOhB,GAAK,KAAD,GAA1B,IAAAE,EAAAe,KACA,CAADf,EAAAE,KAAA,gBAAAF,EAAAgB,OAAA,UAAS,GAAI,QAAAhB,EAAAE,KAAA,iBAGpB,OAHoBF,EAAAC,KAAA,GAAAD,EAAAiB,GAAAjB,EAAA,SAE1CY,QAAQC,IAAI,wBACZD,QAAQC,IAAIb,EAAAiB,GAAEC,SAAQlB,EAAAgB,OAAA,UACf,GAAK,yBAAAhB,EAAAmB,OAAA,GAAAxB,EAAA,oBAEjByB,MAAA,KAAAC,UAAA,CAEcC,MAxBd,SAEgCC,GAAA,OAAAhC,EAAA6B,MAAC,KAADC,UAAA,E,QCLlBG,MAzBf,WAWE,OACEC,cAAA,OAAKC,UAAU,cAAaC,SACxBF,cAACG,IAAW,CACZC,SALKlE,6IAAYmE,0BAMjBC,WAAW,uBACXC,UAdJ,SAAiBC,GACbrB,QAAQC,IAAIoB,GACEX,EAAmBW,EAAerC,YACpCsC,MAAM,oBACbA,MAAM,iBACf,EAUIC,UAAWvB,QAAQC,IACnBuB,aAAc,wBAKtB,ECfeC,MAVf,WACE,OACEC,eAAA,OAAKZ,UAAU,SAAQC,SAAA,CACnBF,cAAA,OAAKC,UAAU,gBACfD,cAAA,MAAAE,SAAI,uBACJF,cAAA,OAAKC,UAAU,kBAGvB,ECIea,MATf,WACE,OACED,eAAA,OAAKZ,UAAU,MAAKC,SAAA,CAClBF,cAACY,EAAM,IACPZ,cAACD,EAAK,MAGZ,ECPagB,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHnB,cAACoB,IAAMC,WAAU,CAAAnB,SACfF,cAACc,EAAG,M","file":"static/js/main.57f19a74.chunk.js","sourcesContent":["var credentials = {}\ncredentials.email = process.env.REACT_APP_GOOGLE_EMAIL;\ncredentials.key = process.env.REACT_APP_GOOGLE_KEY;\ncredentials.spreadsheetId = process.env.REACT_APP_GOOGLE_SHEET;\n//console.log(process.env);\n//console.log(credentials.key);\n//console.log(process.env.REACT_APP_GOOGLE_KEY);\n\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\n\n// Google Sheets Document ID -- PROD\nconst doc = new GoogleSpreadsheet(credentials.spreadsheetId);\n\nfunction getLocalDate(){\n  // Create a new Date object\n  const currentDate = new Date();\n\n  // Adjust the time zone offset to GMT+3 (EEST)\n  currentDate.setUTCHours(currentDate.getUTCHours());\n\n  // Format the date as a string in ISO format\n  //const isoDateGMTPlus3 = currentDate.toISOString();\n\n  const hours = currentDate.getHours().toString().padStart(2, '0');\n  const minutes = currentDate.getMinutes().toString().padStart(2, '0');\n  const day = currentDate.getDate().toString().padStart(2, '0');\n  const month = (currentDate.getMonth() + 1).toString().padStart(2, '0'); // Months are 0-based\n  const year = currentDate.getFullYear().toString().slice(-2);\n\n  const formattedDate = `${hours}:${minutes} ${day}/${month}/${year}`;\n  return formattedDate;\n\n}\n\nasync function saveToGoogleSheets(profileObj) {\n  try{\n    await doc.useServiceAccountAuth({\n        client_email: credentials.email,\n        private_key: credentials.key,\n    });\n\n    await doc.loadInfo(); // Loads document properties and worksheets\n\n    const sheet = doc.sheetsByIndex[0];\n    \n    const row = { Email: profileObj.email, DateISO: getLocalDate(), Nome: profileObj.name};\n    console.log(row);\n    var GoogleSpreadsheetRowInserted = await sheet.addRow(row);\n    if(GoogleSpreadsheetRowInserted) return true;\n  }catch(e){\n      console.log(\"erro inserindo sheet\");\n      console.log(e.message)\n      return false;\n  }\n}\n\nexport default saveToGoogleSheets;\n","import GoogleLogin from  \"@stack-pulse/next-google-login\"\n\nimport saveToGoogleSheets from './func/saveToGoogleSheets'\n\nfunction Login() {\n\n    function onLogin(googleResponse){\n        console.log(googleResponse);\n        var inseriu = saveToGoogleSheets(googleResponse.profileObj);\n        if(inseriu) alert(\"Ponto registrado\");\n        else alert(\"Falha no ponto\")\n    }\n    function getStringClientID(){\n      return process.env.REACT_APP_GOOGLE_CLIENTID;\n    }\n  return (\n    <div className=\"GoogleLogin\">\n        <GoogleLogin\n        clientId={getStringClientID()}\n        buttonText=\"Continue with Google\"\n        onSuccess={onLogin}\n        onFailure={console.log}\n        cookiePolicy={'single_host_origin'}\n        />\n        \n    </div>\n  );\n}\n\nexport default Login;\n","import '../App.css';\n\nfunction Header() {\n  return (\n    <div className=\"Header\">\n        <div className='espacamento'/>\n        <h1>Bater ponto na ECS</h1>\n        <div className='espacamento'/>\n    </div>\n  );\n}\n\nexport default Header;\n","import './App.css';\n\nimport Login from './components/Login';\nimport Header from './components/Header';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Login/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}